/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package fisheries;

/**
 *
 * @author USER
 */
public class MAINFRAME extends javax.swing.JFrame {

    /**
     * Creates new form MAINFRAME
     */
    public MAINFRAME() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        depature = new javax.swing.JTextField();
        arrival = new javax.swing.JTextField();
        duration = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        clearres = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("DEPATURE");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 126, 115, 32));

        jLabel2.setText("ARRIVAL");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 176, 115, 33));

        depature.setBackground(new java.awt.Color(102, 255, 255));
        depature.setToolTipText("Tap This To Enter The Time Of Depature");
        getContentPane().add(depature, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 126, 46, 32));

        arrival.setBackground(new java.awt.Color(102, 255, 255));
        arrival.setToolTipText("Tap This Field To Enter The Time Of Arrival");
        getContentPane().add(arrival, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 176, 46, 33));

        duration.setText("CALCULATE");
        duration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationActionPerformed(evt);
            }
        });
        getContentPane().add(duration, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, 200, 63));

        result.setEditable(false);
        result.setBackground(new java.awt.Color(51, 255, 255));
        result.setColumns(20);
        result.setRows(5);
        jScrollPane1.setViewportView(result);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 335, 60));

        clearres.setText("CLEAR");
        clearres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearresActionPerformed(evt);
            }
        });
        getContentPane().add(clearres, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 220, -1, 54));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fisheries/parfact.JPG"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 0, 800, 710));

        jPanel1.setBackground(new java.awt.Color(255, 255, 51));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 660, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void durationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationActionPerformed

        try {

            double duration;
            String dep1 = depature.getText();
            double dep2 = Double.parseDouble(dep1);
            String arriv1 = arrival.getText();
            double arriv2 = Double.parseDouble(arriv1);
            duration = 12 - dep2 + arriv2;
             result.setText("THE DURATION IS: " + String.format("%.2f", duration) + " HOURS");
//            double newDuration;
//            double hat;
//            if (duration > 1.60) {
//
//                newDuration = duration - 16.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 2.60) {
//
//                newDuration = duration - 2.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 3.60) {
//
//                newDuration = duration - 3.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 4.60) {
//
//                newDuration = duration - 4.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 5.60) {
//
//                newDuration = duration - 5.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 6.60) {
//
//                newDuration = duration - 6.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 7.60) {
//
//                newDuration = duration - 7.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 8.60) {
//
//                newDuration = duration - 8.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 9.60) {
//
//                newDuration = duration - 9.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 10.60) {
//
//                newDuration = duration - 10.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 11.60) {
//
//                newDuration = duration - 11.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 12.60) {
//
//                newDuration = duration - 12.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 13.60) {
//
//                newDuration = duration - 13.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 14.60) {
//
//                newDuration = duration - 14.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 15.60) {
//
//                newDuration = duration - 15.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 16.60) {
//
//                newDuration = duration - 16.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 17.60) {
//
//                newDuration = duration - 17.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 18.60) {
//
//                newDuration = duration - 18.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 19.60) {
//
//                newDuration = duration - 19.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 20.60) {
//
//                newDuration = duration - 20.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 21.60) {
//
//                newDuration = duration - 21.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 22.60) {
//
//                newDuration = duration - 22.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 23.60) {
//
//                newDuration = duration - 23.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else if (duration > 24.60) {
//
//                newDuration = duration - 24.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            } else {
//                result.setText("THE DURATION IS: " + String.format("%.2f", duration) + " HOURS");
//            }

//            if (duration < 1.60) {
//                double newDuration;
//                double hat;
//                newDuration = duration - 1.60;
//                hat = newDuration + duration;
//                result.setText("THE DURATION IS: " + String.format("%.2f", hat) + " HOURS");
//            }
//            else 
            // result.setText("THE DURATION IS: " + String.format("%.2f", duration) + " HOURS");
            //result.setText(String.format("%.2f",hat));
            //result.setText(hat);
        } catch (Exception e) {
            result.setText("PLEASE ENTER A NUMBER");

        }
    }//GEN-LAST:event_durationActionPerformed

    private void clearresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearresActionPerformed
        // TODO add your handling code here:
        depature.setText(null);
        arrival.setText(null);
        result.setText(null);

    }//GEN-LAST:event_clearresActionPerformed

    /**
     * @param args the VFDTADcommand line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MAINFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MAINFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MAINFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MAINFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MAINFRAME().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField arrival;
    private javax.swing.JButton clearres;
    private javax.swing.JTextField depature;
    private javax.swing.JButton duration;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea result;
    // End of variables declaration//GEN-END:variables
}
